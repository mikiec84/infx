% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataset.R
\name{list_datasets}
\alias{list_datasets}
\alias{list_datasets.Sample}
\alias{list_datasets.Experiment}
\alias{list_datasets.character}
\alias{list_dataset_ids}
\alias{list_dataset_ids.character}
\alias{list_dataset_ids.DataSet}
\alias{list_references}
\alias{list_references.PlateIdentifier}
\alias{list_references.Plate}
\alias{list_references.PlateMetadata}
\alias{list_references.Sample}
\alias{list_references.MaterialGeneric}
\alias{list_references.MaterialScreening}
\alias{list_references.MaterialIdentifierGeneric}
\alias{list_references.MaterialIdentifierScreening}
\alias{list_references.DatasetIdentifier}
\alias{list_references.DataSet}
\alias{list_references.DatasetReference}
\alias{list_references.FeatureVectorDatasetReference}
\alias{list_references.FeatureVectorDatasetWellReference}
\alias{list_references.ImageDatasetReference}
\alias{list_references.MicroscopyImageReference}
\alias{list_references.PlateImageReference}
\alias{list_dataset_types}
\title{List datasets and dataset reference objects}
\usage{
list_datasets(token, x, ...)

\method{list_datasets}{Sample}(token, x, include = c(NA, "children",
  "parents", "all"), ...)

\method{list_datasets}{Experiment}(token, x, include = c(NA, "children",
  "parents", "all"), ...)

\method{list_datasets}{character}(token, x, include = c(NA, "children",
  "parents", "all"), ...)

list_dataset_ids(token, x, ...)

\method{list_dataset_ids}{character}(token, x, ...)

\method{list_dataset_ids}{DataSet}(token, x, ...)

list_references(token, x, ...)

\method{list_references}{PlateIdentifier}(token, x, type = c("raw",
  "segmentation", "feature"), ...)

\method{list_references}{Plate}(token, x, type = c("raw", "segmentation",
  "feature"), ...)

\method{list_references}{PlateMetadata}(token, x, type = c("raw",
  "segmentation", "feature"), ...)

\method{list_references}{Sample}(token, x, type = c("raw", "segmentation",
  "feature"), ...)

\method{list_references}{MaterialGeneric}(token, x, experiment = NULL, ...)

\method{list_references}{MaterialScreening}(token, x, experiment = NULL, ...)

\method{list_references}{MaterialIdentifierGeneric}(token, x,
  experiment = NULL, ...)

\method{list_references}{MaterialIdentifierScreening}(token, x,
  experiment = NULL, ...)

\method{list_references}{DatasetIdentifier}(token, x, wells = NULL, channels,
  ...)

\method{list_references}{DataSet}(token, x, wells = NULL, channels, ...)

\method{list_references}{DatasetReference}(token, x, wells = NULL, channels,
  ...)

\method{list_references}{FeatureVectorDatasetReference}(token, x,
  wells = NULL, channels, ...)

\method{list_references}{FeatureVectorDatasetWellReference}(token, x,
  wells = NULL, channels, ...)

\method{list_references}{ImageDatasetReference}(token, x, wells = NULL,
  channels, ...)

\method{list_references}{MicroscopyImageReference}(token, x, wells = NULL,
  channels, ...)

\method{list_references}{PlateImageReference}(token, x, wells = NULL,
  channels, ...)

list_dataset_types(token, ...)
}
\arguments{
\item{token}{Login token as created by \code{login_openbis()}.}

\item{x}{Object to limit search for datasets/files with.}

\item{...}{Generic compatibility. Extra arguments will be passed to
\code{\link[=make_requests]{make_requests()}}.}

\item{include}{String indicating whether to include parent/child datasets
as well.}

\item{type}{For listing image datasets, it can be specified, whether only
raw image datasets, only segmentation image datasets or any kind of image
datasets (default) are to be listed.}

\item{experiment}{When searching for datasets associated with materials,
the search can be limited to a single experiment.}

\item{wells}{A (set of) \code{WellPosition} object(s) to limit the dataset
listing to.}

\item{channels}{A character vector with imaging channel names to limit the
dataset listing to.}
}
\description{
All available datasets for the specified experiment(s), sample(s) or
dataset code(s) are retrieved as \code{DataSet} objects by
\code{list_datasets()}. Each dataset has a type and all realized type
identifiers can be listed using \code{list_dataset_types()}. A more compact
object type, uniquely identifying a \code{DataSet}, is a that of a
\code{DatasetIdentifier}. Given either a set of \code{DataSet} objects or a character
vector holding (a) dataset code(s), \code{list_dataset_id()} fetched the
corresponding \code{DatasetIdentifier} objects. Behavior of the function
\code{list_references()}, in particular the returned object type, depends on
input types. For more information, please refer to the details section.
}
\details{
\code{list_datasets()} is an s3 generic function that can be dispatched on
\code{Sample} and \code{Experiment} objects, as well as character vectors containing
dataset codes and it returns sets of \code{DataSet} objects. Additionally it
can be requested that parent or child datasets are to be included as well.

Several classes in addition to \code{DatasetIdentifier} implement the
\code{IDatasetIdentifier} interface, including
\itemize{
\item \code{DatasetReference}
\item \code{FeatureVectorDatasetReference}
\item \code{FeatureVectorDatasetWellReference}
\item \code{ImageDatasetReference}
\item \code{MicroscopyImageReference}
\item \code{PlateImageReference}
}

Any of these object types may returned by \code{list_references()}, depending on
argument types. If the s3 generic function \code{list_references()} is
dispatched on plate objects (\code{Plate}, \code{PlateIdentifier} or \code{PlateMetadata}
or \code{Sample} objects, representing plates), \code{ImageDatasetReference} objects
are returned (except if the type argument is set to \code{feature}, in which
case, \code{FeatureVectorDatasetReference} object(s) are returned). Similarly,
if \code{MaterialIdentifierScreening} objects are used as input,
\code{PlateWellReferenceWithDatasets} objects are returned, which each contain
\code{ImageDatasetReference} and \code{FeatureVectorDatasetReference} objects.

Whenever \code{list_references()} is dispatched on dataset ids or dataset
reference objects, the resulting object type depends on whether a (set of)
\code{WellPosition} object(s) were specified as \code{wells} argument. For its
default value (NULL), a set of \code{MicroscopyImageReference} objects is
returned, while \code{PlateImageReference} objects are returned otherwise.
}
\section{TODO}{
 The API function \code{listDataSetsForSample()} has a parameter
\code{areOnlyDirectlyConnectedIncluded}, which is currently fixed to \code{TRUE}. The
documentation contains the following explanation:

If true, only datasets that are directly connected to the sample are
included, otherwise datasets of child samples are included as well.

This does however not seem to correspond to including child datasets in the
API call to \code{listDataSets()} via its \code{connectionsToGet} argument. As long
as it is not entirely clear how the inclusion of child/parent datasets
differs from setting \code{areOnlyDirectlyConnectedIncluded} to \code{FALSE}, this
option is not exposed to the user.
}

\section{openBIS}{

\itemize{
\item \Sexpr{infx::docs_link("gis", "listDataSetsForSample")}
\item \Sexpr{infx::docs_link("gis", "listDataSets")}
}


\itemize{
\item \Sexpr{infx::docs_link("gis", "listDataSetsForExperiments")}
}


\itemize{
\item \Sexpr{infx::docs_link("gis", "getDataSetMetaData")}
}


\itemize{
\item \Sexpr{infx::docs_link("sas", "getDatasetIdentifiers")}
}


\itemize{
\item \Sexpr{infx::docs_link("sas", "listRawImageDatasets")}
\item \Sexpr{infx::docs_link("sas", "listSegmentationImageDatasets")}
\item \Sexpr{infx::docs_link("sas", "listFeatureVectorDatasets")}
}


\itemize{
\item \Sexpr{infx::docs_link("dsrs", "listImageReferences")}
\item \Sexpr{infx::docs_link("dsrs", "listPlateImageReferences")}
}


\itemize{
\item \Sexpr{infx::docs_link("gis", "listDataSetTypes")}
}
}

\examples{
\dontrun{
  tok <- login_openbis("rdgr2014", "IXPubReview")

  # search for a sample object corresponding to plate KB2-03-1I
  samp <- search_openbis(tok,
                         search_criteria(
                           attribute_clause("code",
                                            "/INFECTX_PUBLISHED/KB2-03-1I")
                         ),
                         target_object = "sample")

  # list all datasets associated with this plate
  ds <- list_datasets(tok, samp)

  # select a feature dataset, note how the fields "parentCodes" and
  # "childrenCodes" both are not set
  feat_ds <- ds[[grep("FEATURES_CC_MAT",
                      get_field(ds, "dataSetTypeCode"))]]

  # fetch parent and child datasets and now both the "parentCodes" and
  # "childrenCodes" fields are populated with the corresponding codes
  feat_ds <- list_datasets(tok, get_field(feat_ds, "code"), include = "all")

  # re-using the plate sample from above, an ImageDatasetReference object
  # corresponding to the associated raw imaging dataset is listed
  raw_ref <- list_references(tok, samp)
  # available imaging channels are
  get_field(raw_ref[[1]], "properties")[["IMAGE.CHANNEL.LIST"]]

  # a more specific image reference object can be retrieved by passing a
  # well specification to list_references()
  well_ref <- list_references(tok, raw_ref,
                              wells = json_class(wellRow = 1L,
                                                 wellColumn = 2L,
                                                 class = "WellPosition"),
                              channel = "DAPI")
  # a reference to 9 images is returned, as there are 3 x 3 imaging tiles
  # per well
  length(well_ref)
}

}
