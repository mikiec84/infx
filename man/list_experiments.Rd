% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/experiment.R
\name{list_experiments}
\alias{list_experiments}
\alias{list_experiments.ExperimentIdentifier}
\alias{list_experiments.Project}
\alias{list_experiment_ids}
\alias{list_experiment_types}
\alias{as_experiment_id}
\alias{as_experiment_id.Experiment}
\alias{as_experiment_id.ExperimentIdentifier}
\title{List experiments}
\usage{
list_experiments(token, x, ...)

\method{list_experiments}{ExperimentIdentifier}(token, x, ...)

\method{list_experiments}{Project}(token, x,
  types = list_experiment_types(token), require = c(NA, "DataSets",
  "Samples"), ...)

list_experiment_ids(token, ...)

list_experiment_types(token, ...)

as_experiment_id(x, ...)

\method{as_experiment_id}{Experiment}(x, ...)

\method{as_experiment_id}{ExperimentIdentifier}(x, ...)
}
\arguments{
\item{token}{Login token as created by \code{login_openbis()}.}

\item{x}{Object to limit the number of returned experiments, e.g. a set of
\code{ExperimentIdentifier} or \code{Project} objects.}

\item{...}{Generic compatibility. Extra arguments will be passed to
\code{\link[=make_requests]{make_requests()}}.}

\item{types}{Either a single or set of \code{ExperimentType} objects}

\item{require}{A switch to require the resulting experiments to contain a
nonzero number of dataset or sample. Default behavior is no requirement.}
}
\description{
Experiments can be represented by two object classes: \code{Experiment} and
\code{ExperimentIdentifier}. The fields that make up an \code{ExperimentIdentifier}
object are a subset of those required for an \code{Experiment} object. Therefore
an experiment can be turned into an experiment id object without an API
call, using the function \code{as_experiment_id()}. The reverse can be achieved by
calling \code{list_experiments()} on experiment id objects. In general,
experiments and experiment id objects can be listed using
\code{list_experiments()} and \code{list_experiment_ids()}.
}
\details{
By calling \code{list_experiments()} on project objects, all corresponding
experiments are listed. It is possible to limit the search to experiments
that are of a certain type and exclude experiments that either have no
datasets or samples associated. An exhaustive list of realized experiment
types can be retrieved using \code{list_experiment_types()}. If several
experiment types are requested in \code{list_experiments()}, the default is to
iterate over all available types, an API call per experiment type has to be
made.

\code{ExperimentIdentifier} objects present a more compact way of uniquely
representing experiments. All experiments that are available to the current
user can be listed with \code{list_experiment_ids()}. There is no way of limiting
the search for experiments.
}
\section{openBIS}{

\itemize{
\item \Sexpr{infx::docs_link("gis", "listExperiments")}
}


\itemize{
\item \Sexpr{infx::docs_link("gis", "listExperimentsHavingDataSets")}
\item \Sexpr{infx::docs_link("gis", "listExperimentsHavingSamples")}
}


\itemize{
\item \Sexpr{infx::docs_link("sas", "listExperiments")}
}


\itemize{
\item \Sexpr{infx::docs_link("gis", "listExperimentTypes")}
}
}

\examples{
\donttest{
  tok <- login_openbis("rdgr2014", "IXPubReview")

  # list all available projects to limit the search for experiments
  proj <- list_projects(tok)

  # list all experiments corresponding to the project with index 1
  exps <- list_experiments(tok, proj[[1L]])

  # convert experiment to experiment ids and back
  exp_ids <- as_experiment_id(exps)
  identical(exps, list_experiments(tok, exp_ids))

  # experiments can also be searched for
  exp <- search_openbis(tok,
                        search_criteria(
                          attribute_clause("code",
                                           get_field(exps[[1L]],
                                                     "identifier"))
                        ),
                        target_object = "experiment")
  identical(exps[[1L]], exp)

  logout_openbis(tok)
}

}
