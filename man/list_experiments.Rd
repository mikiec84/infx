% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/experiment.R
\name{list_experiments}
\alias{list_experiments}
\alias{list_experiments.ExperimentIdentifier}
\alias{list_experiments.Project}
\alias{list_experiment_ids}
\alias{list_experiment_types}
\alias{exp_to_expid}
\alias{list_experiment_metadata}
\alias{list_experiment_metadata.ExperimentIdentifier}
\title{List experiments}
\usage{
list_experiments(token, x, ...)

\method{list_experiments}{ExperimentIdentifier}(token, x, ...)

\method{list_experiments}{Project}(token, x,
  types = list_experiment_types(token), require = c(NA, "DataSets",
  "Samples"), ...)

list_experiment_ids(token)

list_experiment_types(token)

exp_to_expid(x)

list_experiment_metadata(token, x, ...)

\method{list_experiment_metadata}{ExperimentIdentifier}(token, x, ...)
}
\arguments{
\item{token}{Login token as created by \code{login_openbis()}.}

\item{x}{Object to limit the number of returned experiments, e.g. a set of
\code{ExperimentIdentifier} or \code{Project} objects.}

\item{...}{Generic compatibility}

\item{types}{Either a single of vector of \code{ExperimentType} objects}

\item{require}{A switch to require the resulting experiments to contain a
nonzero number of dataset or sample. Default behavior is no requirement.}
}
\description{
Given a login token and a set of experiment ids or projects, all available
experiments are listed. In case of projects being used as filtering
criterion, it is also possible to limit the search to experiments that are
of a certain type and exclude experiments that either have no datasets or
samples associated. If several experiment types are requested (default: all
available), an API call per experiment type has to be made.
}
\details{
The two utility functions \code{list_experiment_ids()} and
\code{list_experiment_types()} list all available experiment ids and experiment
types of the queried openBIS instance. Furthermore, experiment objects can
be converted to experiment id objects using \code{exp_to_expid()}. This function
does not incur an API call and can act on both a single experiment object
or a vector of experiment objects (passed as a \code{json_vec} object) and will
return a \code{json_vec} object of type \code{ExperimentIdentifier}.
}
