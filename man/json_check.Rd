% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/json-utils.R
\name{has_fields}
\alias{has_fields}
\alias{has_fields.json_class}
\alias{has_fields.json_vec}
\title{Check JSON objects}
\usage{
has_fields(x, fields, ...)

\method{has_fields}{json_class}(x, fields, ...)

\method{has_fields}{json_vec}(x, fields, ...)
}
\arguments{
\item{x}{Object to print.}

\item{...}{Generic compatibility.}

\item{depth}{The maximum recursion depth for printing.}

\item{width}{Number of columns to maximally print.}

\item{length}{Number of lines to maximally print.}

\item{fancy}{Logical switch to enable font styles, colors and UTF box
characters for printing.}
}
\description{
Inspired by the ast printing function of Hadley's \code{lobstr} package and
borrowing code from \href{https://git.io/vFMA5}{there}, this enables the
recursive printing of \code{json_class} and \code{json_vec} objects. Printing style
can either be with fancy (colors, UTF box characters. etc.) or simple and
several options are available for setting the max printing with/length, as
well as a max recursion depth for nested \code{json_class} objects.
}
\examples{
tmp <- json_class(a = json_class(b = "c", class = "foo"),
                  d = json_class(e = "f", class = "bar"),
                  class = "foobar")
tmp
print(tmp, depth = 2L)
print(tmp, depth = 2L, length = 4L)

}
