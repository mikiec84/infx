% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/json-utils.R
\name{print_json_class}
\alias{print_json_class}
\alias{style}
\title{Helper function for printing JSON objects}
\usage{
print_json_class(x, unnamed_parent = FALSE, cur_depth, max_depth,
  layout = style())

style(fancy = TRUE)
}
\arguments{
\item{x}{The JSON object to print.}

\item{unnamed_parent}{Whether the parent node is named or not (in some
cases, a different box character has to be used if this is true).}

\item{cur_depth}{The current recursion depth.}

\item{max_depth}{The maximum recursion depth.}

\item{layout}{Characters for printing the tree structure and styles to be
applied to the different entities.}

\item{fancy}{Logical switch to enable font styles, colors and UTF box
characters.}
}
\description{
This function powers the \code{json_class} and \code{json_vec} specific methods of the
base generic \code{\link[base:print]{base::print()}}. As it is applied recursively and recursion
depth has to be controllable, the function is aware of both the current
recursion depth (via \code{cur_depth}) and the maximally allowed recursion depth
(via \code{max_depth}). Furthermore the printing style (colored output and UTF
box characters for visualizing the tree structure) can be controlled through
the \code{layout} argument. Under some circumstances, this requires a given node
to know whether the parent node is a named object or not, which is passed
from a parent node to its children through the \code{unnamed_parent} argument.

In order to enable fancy printing (colored output and UTF box characters
for visualizing the tree structure), this function provides the required
styling information. Fancy printing can be disabled by setting the \code{fancy}
argument to \code{FALSE}, which yields ASCII characters for the tree structure
and disables color.
}
\keyword{internal}
