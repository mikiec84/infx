% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.R
\name{search_openbis}
\alias{search_openbis}
\alias{search_criteria}
\alias{search_sub_criteria}
\title{Search for objects}
\usage{
search_openbis(token, criteria, target_object = c("data_set", "experiment",
  "material", "sample"), fetch_options = NULL)

search_criteria(..., operator = "all", sub_criteria = NULL)

search_sub_criteria(criteria, type = "sample")
}
\arguments{
\item{token}{Login token as created by \code{login_openbis()}.}

\item{criteria}{A single \code{SearchCriteria} object.}

\item{target_object}{The object type the search is targeted at, i.e.
\code{DataSet}s, \code{Experiment}s, etc.}

\item{fetch_options}{If samples are searched for, additional fetch options
can be specified.}

\item{...}{One or more search clauses.}

\item{operator}{How to combine search clauses, either \code{all} or \code{any} have
to be fulfilled.}

\item{sub_criteria}{Optionally, one or several \code{SearchSubCriteria} objects
can be used to create a \code{SearchCriteria} object.}

\item{type}{The entity type, a \code{SearchSubCriteria} is applied to.}
}
\description{
Searching openBis can be done by creating a \code{SearchCriteria} object and
passing that to \code{search_openbis()}, alongside specifying what type of
object is being searched for. In case of \code{Sample}s being searched for,
a further argument, \code{fetch_options}, can be specified for controlling the
search, which can contain one or more of the strings
}
\details{
\itemize{
\item \code{ancestors}: Ask for all ancestors.
\item \code{basic}: Samples will have only basic attributes (id, code, type, space
code, experiment identifier, registrator, registration date,
modification date) but no properties.
\item \code{children}: Samples contain also their children samples.
\item \code{contained}: Ask for contained samples.
\item \code{descendants}: Ask for all descendants.
\item \code{metaprojects}: Ask for metaprojects this sample belongs to.
\item \code{parents}: Samples contain also their parent samples.
\item \code{properties}: Samples contain basic attributes and all properties.
}

A \code{SearchCriteria} object can be instantiated using the constructor
\code{search_criteria}, which takes one or several match clause objects, see
\code{\link[=match_clause]{match_clause()}}, a search operator specifying whether to match \code{all} or
\code{any} clauses, and optionally one or several \code{SearchSubCriteria} objects.
\code{SearchSubCriteria} objects in turn can be created with
\code{search_sub_criteria()}, which takes a single \code{SearchCriteria} object
alongside a string specifying the entities, the sub criterion is applied
to. Possibilities are
\itemize{
\item \code{data_set_container}
\item \code{data_set_parent}
\item \code{data_set_child}
\item \code{experiment}
\item \code{sample}
\item \code{sample_container}
\item \code{sample_child}
\item \code{sample_parent}
}
}
