% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plate.R
\name{list_plates}
\alias{list_plates}
\alias{list_plates.NULL}
\alias{list_plates.ExperimentIdentifier}
\alias{list_plates.Experiment}
\alias{list_plate_metadata}
\alias{list_plate_metadata.PlateIdentifier}
\alias{list_plate_metadata.Plate}
\alias{list_plate_metadata.Sample}
\alias{plate_id}
\alias{as_plate_id}
\alias{as_plate_id.Plate}
\alias{as_plate_id.Sample}
\alias{as_plate_id.PlateMetadata}
\alias{as_plate_id.PlateIdentifier}
\alias{list_wells}
\alias{list_wells.PlateIdentifier}
\alias{list_wells.Plate}
\alias{list_wells.Sample}
\alias{list_wells.MaterialScreening}
\alias{list_wells.MaterialIdentifierScreening}
\alias{list_wells.MaterialGeneric}
\alias{list_wells.MaterialIdentifierGeneric}
\alias{well_id}
\alias{as_well_id}
\alias{as_well_id.WellMetadata}
\alias{as_well_id.WellIdentifier}
\alias{well_pos}
\title{List plates and wells}
\usage{
list_plates(token, x = NULL, ...)

\method{list_plates}{NULL}(token, x, ...)

\method{list_plates}{ExperimentIdentifier}(token, x, ...)

\method{list_plates}{Experiment}(token, x, ...)

list_plate_metadata(token, x, ...)

\method{list_plate_metadata}{PlateIdentifier}(token, x, ...)

\method{list_plate_metadata}{Plate}(token, x, ...)

\method{list_plate_metadata}{Sample}(token, x, ...)

plate_id(code, space)

as_plate_id(x, ...)

\method{as_plate_id}{Plate}(x, ...)

\method{as_plate_id}{Sample}(x, ...)

\method{as_plate_id}{PlateMetadata}(x, ...)

\method{as_plate_id}{PlateIdentifier}(x, ...)

list_wells(token, x, ...)

\method{list_wells}{PlateIdentifier}(token, x, ...)

\method{list_wells}{Plate}(token, x, ...)

\method{list_wells}{Sample}(token, x, ...)

\method{list_wells}{MaterialScreening}(token, x, experiment = NULL,
  include_datasets = FALSE, ...)

\method{list_wells}{MaterialIdentifierScreening}(token, x, experiment = NULL,
  include_datasets = FALSE, ...)

\method{list_wells}{MaterialGeneric}(token, x, experiment = NULL,
  include_datasets = FALSE, ...)

\method{list_wells}{MaterialIdentifierGeneric}(token, x, experiment = NULL,
  include_datasets = FALSE, ...)

well_id(perm_id, plate, well_pos = NULL, well_code = NULL, ...)

as_well_id(x, ...)

\method{as_well_id}{WellMetadata}(x, ...)

\method{as_well_id}{WellIdentifier}(x, ...)

well_pos(row = NULL, col = NULL, name = NULL)
}
\arguments{
\item{token}{Login token as created by \code{login_openbis()}.}

\item{x}{Object to limit the number of returned wells or plates.}

\item{...}{Generic compatibility. Extra arguments will be passed to
\code{\link[=make_requests]{make_requests()}}.}

\item{code, space}{Character vectors that together can be used to create
\code{PlateIdentifier} objects.}

\item{experiment}{Additionally, the search can be limited to a single
experiment, specified either as \code{Experiment} or \code{ExperimentIdentifier}.}

\item{include_datasets}{Logical switch indicating whether to also return
the connected image and image analysis data sets.}

\item{perm_id, plate, well_pos}{Character vector, set of plate objects and
set of well position objects, all of the same length or length 1, that
together can be used to create \code{WellIdentifier} objects.}

\item{well_code}{Character vector where each entry is of the form
barcode:well_name, e.g. FOO-BAR-1:A1, FOO-BAR-1:A2, etc.}

\item{row, col}{Character vector of plate row names or numeric vector of
plate row indices and numeric vector of plate column indices, both of the
same length or of length 1.}

\item{name}{Character vector of well name, where each entry is of the form
A1, A2, etc.}
}
\description{
Plates and wells are special cases of \code{Sample} objects and play an
important organizational role when openBIS is used in HTS experiments. All
InfectX screens were arrayed onto 384-well plates, arranged into 16 rows
(A through P) and 24 columns (1 through 24). \code{Plate} and \code{PlateIdentifier}
objects are used to identify plates while for wells only \code{WellIdentifier}
objects exists for representing individual wells. Additional objects
relevant in this context are \code{PlateMetadata}, which for all associated wells
contain respective \code{WellMetadata} objects and
\code{PlateWellReferenceWithDatasets} objects, each holding a \code{Plate} object and
a \code{WellPosition} object, thereby in a sense also identifying individual
wells.
}
\details{
\code{Plate} objects are listed using \code{list_plates()}, which can either list all
available plates (default or dispatch on \code{NULL}) or restrict the listing to
a set of supplied experiment objects (dispatch on either \code{Experiment} or
\code{ExperimentIdentifier} objects). If multiple experiments are used for
limiting the search (i.e. a \code{json_vec} of experiments), a separate API call
for each object has to be made. \code{PlateMetadata} objects (including all
corresponding \code{WellMetadata} objects) are retrieved by
\code{list_plate_metadata()} which can be dispatched on objects that represent
plates, including \code{Plate}, \code{PlateIdentifier} and \code{Sample} (given that the
sample is of type \code{PLATE}). Finally, \code{PlateIdentifier} can be created
either by calling \code{plate_id()} or though coercion of \code{Plate}, \code{Sample}
(with type \code{PLATE}) or \code{PlateMetadata}  objects using the function
\code{as_plate_id()}. Neither \code{plate_id()} nor \code{as_plate_id()} incur API calls.

Wells can be listed with \code{list_wells()}, which returns \code{WellIdentifier}
objects if dispatch occurs on objects representing plates, including
\code{Plate}, \code{PlateIdentifier} and \code{Sample} (with type \code{PLATE}). In this case
the entire set of well id objects corresponding to the selected plates is
returned and a separate API call is required per plate.

Whenever \code{list_wells()} is dispatched on material objects (any of
\code{MaterialScreening}, \code{MaterialIdentifierScreening}, \code{MaterialGeneric} or
\code{MaterialIdentifierGeneric}), \code{PlateWellReferenceWithDatasets} objects are
returned, representing wells associated with the given material. If multiple
material ids are passed, an API call for each object is issued. The well
search can be limited to an experiment by passing a single \code{Experiment} or
\code{ExperimentIdentifier} object as \code{experiment} argument and image dataset
references as well as feature vector dataset references can be retrieved
as part of the \code{PlateWellReferenceWithDatasets} objects if the logical
switch \code{include_datasets} is set to \code{TRUE}. A separate API call per passed
material object is required.

Instantiation of \code{WellIdentifier} objects can be done either using the
constructor \code{well_id()} or via coercion of \code{WellMetadata} objects by
calling \code{as_well_id()}. Well samples cannot be coerced to well id objects
as they do not contain all fields that are required. A further object type
relevant to this context is that of \code{WellPosition}, encoding the position
of a well within a plate. Such objects can be created using the constructor
\code{well_pos()}.
}
\section{openBIS}{

\itemize{
\item \Sexpr{infx::docs_link("sas", "listPlates")}
\item \Sexpr{infx::docs_link("sas", "listPlateWells")}
\item \Sexpr{infx::docs_link("sas", "getPlateMetadataList")}
}
}

\examples{
\donttest{
  tok <- login_openbis("rdgr2014", "IXPubReview")

  # search for an experiment, e.g. ADENO-AU-K1
  exp <- search_openbis(tok,
                        search_criteria(
                          property_clause("pathogen", "Adenovirus"),
                          property_clause("library", "Ambion"),
                          property_clause("geneset", "Kinome"),
                          property_clause("replicate", 1L)
                        ),
                        target_object = "experiment")

  # list all plates associated with this experiment
  plates <- list_plates(tok, exp)
  length(plates)
  as_plate_id(plates)

  # for a plate, fetch meta data objects
  meta <- list_plate_metadata(tok, plates[[1L]])
  print(meta[[1L]], depth = 2L, length = 15L)
  print(meta[[1L]][["wells"]][[1L]], depth = 2L)

  # search for a sample object corresponding to plate BB01-1I
  samp <- search_openbis(tok,
                         search_criteria(
                           attribute_clause("code",
                                            "/INFECTX_PUBLISHED/BB01-1I")
                         ),
                         target_object = "sample")

  # list all wells for this sample
  wells <- list_wells(tok, samp)
  identical(as_well_id(meta[[1L]][["wells"]][[1L]]),
            wells[1L])

  # search for the material corresponding to MTOR
  mat <- search_openbis(tok,
                        search_criteria(
                          property_clause("gene_symbol", "MTOR")
                        ),
                        target_object = "material")
  # search for associated wells, limited to ADENO-AU-K1
  mtor <- list_wells(tok, mat, exp)
  plates <- get_field(mtor, "experimentPlateIdentifier")
  as_plate_id(plates)
  unique(get_field(mtor, "wellPosition"))

  logout_openbis(tok)
}

}
