% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/image.R
\name{fetch_images}
\alias{fetch_images}
\alias{fetch_images.DatasetIdentifier}
\alias{fetch_images.DatasetReference}
\alias{fetch_images.ImageDatasetReference}
\alias{fetch_images.MicroscopyImageReference}
\alias{fetch_images.PlateImageReference}
\title{Fetch images}
\usage{
fetch_images(token, x, ...)

\method{fetch_images}{DatasetIdentifier}(token, x, channels,
  well_positions = NULL, image_size = NULL, ...)

\method{fetch_images}{DatasetReference}(token, x, channels,
  well_positions = NULL, image_size = NULL, ...)

\method{fetch_images}{ImageDatasetReference}(token, x, channels,
  well_positions = NULL, image_size = NULL, ...)

\method{fetch_images}{MicroscopyImageReference}(token, x,
  well_positions = NULL, image_size = NULL, ...)

\method{fetch_images}{PlateImageReference}(token, x, image_size = NULL,
  force_png = FALSE, format = NULL, ...)
}
\arguments{
\item{token}{Login token as created by \code{login_openbis()}.}

\item{x}{Object to limit the number of returned images}

\item{...}{Generic compatibility}

\item{channels}{A character vector of imaging channels}

\item{well_positions}{A (list of) \code{WellPosition} objects. If the object
passed as argument x already contains well position information this can
be NULL.}

\item{image_size}{Either a single \code{ImageSize} object or NULL, in which case
images are returned in full size.}

\item{force_png}{Logical switch for making sure the returned image is a
png. If NULL or FALSE, the image is returned in the format it is stored.}

\item{format}{If not NULL, a single \code{ImageRepresentationFormat} object.
Cannot be combined with non-default \code{image_size} and \code{force_png} arguments.}
}
\description{
Dispatch is - as per openBis implementation - possible on any object that
implements the \code{IDatasetIdentifier} interface. However objects referencing
feature are not connected to image datasets and therefore dispatch on
\code{FeatureVectorDatasetReference} and \code{FeatureVectorDatasetWellReference}
is not enabled. The highest level of control over which images are retrieves
is achieved with \code{PlateImageReference} objects, which specify an image
dataset, a well, a tile and a channel. The returned image format can be
modified by either passing an \code{ImageRepresentationFormat} object or
by specifying one or both of the \code{image_size} (expects an \code{ImageSize}
object) and \code{force_png} (logical switch) arguments.
}
\details{
\code{MicroscopyImageReference} objects contain channel information (as well as
tile information, which is not taken into account though). Therefore a
(list of) \code{WellPosition} object(s) has/have to be specified, for which then
all tiles are fetched for the given imaging channel. If the inputed list of
\code{MicroscopyImageReference} objects contain instances that only differ in
tile number, redundancies are filtered out. An API call is necessary for
each non-redundant object.

Finally, \code{DatasetIdentifier}, \code{DatasetReference} and \code{ImageDatasetReference}
objects are all handled identically. For each of the specified datasets,
an imaging channel has to be provided and whenever the dataset is associated
with an entire plate, a (list of) \code{WellPosition} object(s) as well. If the
dataset is associated with a single well, the \code{well_positions} can be left
at its default value (NULL). If several datasets are passed, an API call is
necessary per dataset. Possible redundancies are not checked for.

Images are retrieved as Base64 encoded strings, which are converted to
binary using \code{\link[base64enc:base64decode]{base64enc::base64decode()}} and subsequently read by
\code{\link[magick:image_read]{magick::image_read()}}. Attached to the image(s) is the information with
based on which they/it were/was retrieved , including dataset object, well
positions (where applicable) and channel (where applicable). This results
in a list with length corresponding to the number of API calls that were
necessary.
}
\section{TODO}{
 For dispatch on \code{PlateImageReference} objects, currently the
only options controlling the returned images are an argument for image size
and a flag for forcing the returned format to png. OpenBis also supports
pre-defined image transformations to be applied to the images before they
are sent to the requesting party. These transformations can be requested by
a code (options are listed in \code{ImageRepresentationFormat} objects or in
\code{ImageChannel} objects attached to \code{ImageDatasetMetadata} objects). However,
as no such transformations appear to be defined, this is currently not
implemented.
}

