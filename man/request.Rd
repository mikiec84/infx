% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request.R
\name{make_request}
\alias{make_request}
\alias{request_openbis}
\alias{resolve_references}
\title{Make a JSON-RPC request}
\usage{
make_request(url, method, params, version = "2.0",
  id = paste(sample(c(letters, LETTERS, 0:9), 7), collapse = ""))

request_openbis(method, params, api = c("IGeneralInformationService",
  "IGeneralInformationChangingService", "IQueryApiServer",
  "IWebInformationService", "IDssServiceRpcGeneric", "IScreeningApiServer",
  "IDssServiceRpcScreening"), host = "https://infectx.biozentrum.unibas.ch")

resolve_references(x)
}
\arguments{
\item{url}{Destination url, the request is sent to.}

\item{method}{The API method name.}

\item{params}{A list structure holding the arguments which, converted to
JSON, will be used to call the supplied method. The \code{@type} entries will be
generated from \code{json_class} attributes.}

\item{version}{JSON-RPC protocol version to be used (defaults to \code{"2.0"}.}

\item{id}{An identifier for the JSON-RPC request (defaults to a random
string of length 7). Can be usually be ignored, as only single JSON-RPC
requests are issued per HTTP request.}

\item{api, host}{Strings used to construct the destination url.}

\item{x}{A (possibly nested) list structure for which all \code{@id} fields are
recursively removed.}
}
\description{
Issues a POST request to a JSON-RPC server. All \code{@type} fields are
converted to/from \code{json_class} attributes, using \code{\link[=rm_json_class]{rm_json_class()}} and
\code{\link[=as_json_class]{as_json_class()}}. The helper function \code{request_openbis()} wraps
\code{make_request()} and constructs the url the request is sent to, based on a
root url and an API section name (for the API section mapping, see
\href{https://wiki-bsse.ethz.ch/display/openBISDoc1304/openBIS+JSON+API}{docs}).
As part of the JSON-RPC specification, all objects returned form the API
will have \code{@id} fields, which may be referenced if an objects is used
multiple times. The helper function \code{resolve_references()} recursively
resolves all references such that each object is self-contained.
}
\examples{
\donttest{
  tok <- login_openbis("rdgr2014", "IXPubReview")
  projects <- request_openbis("listProjects", tok)
  print(projects[[1]])
}

}
